{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwin Rajesh\\\\Downloads\\\\Project_v6_vdawg\\\\App\\\\src\\\\Components\\\\Publisher.js\";\nimport React from \"react\";\nimport { COLORS } from \"./Colors\";\nimport SongCard from \"./SongCard\";\nimport AddSongCard from \"./AddSongCard\";\nimport Loader from \"react-loader-spinner\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophone, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Publisher extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      artistID: \"\",\n      artistsIDSong: [],\n      publisherID: \"\",\n      totalEarnings: \"\",\n      purchased_times: 0,\n      songIDs: [],\n      songs: [],\n      form: false\n    };\n    this.openForm = this.openForm.bind(this);\n    this.closeForm = this.closeForm.bind(this);\n  }\n  componentDidMount() {\n    this.loadPublisherDetails().then(() => {\n      console.log(\"Loaded Publisher's Details\", this.state);\n      this.loadSongDetails().then(() => {\n        console.log(\"Loaded Publisher's Songs\");\n      });\n      this.loadPurchasedTimes().then(() => {\n        console.log(\"Loaded Purchased Times\");\n      });\n    });\n  }\n  async loadPublisherDetails() {\n    try {\n      const contractInstance = await this.props.contract.deployed();\n      const userType = await contractInstance.checkUserType.call({\n        from: this.props.account\n      });\n      console.log(\"User Type\", userType);\n      const publisherDetails = await contractInstance.getPublisherDetails.call({\n        from: this.props.account\n      });\n      let songList = [];\n      for (let i = 0; i < publisherDetails[3].length; i++) {\n        songList.push(publisherDetails[3][i].toString());\n      }\n      this.setState({\n        publisherID: publisherDetails[0].toString(),\n        name: publisherDetails[2].toString(),\n        songIDs: songList\n      });\n    } catch (error) {\n      console.error(\"Failed to load publisher details:\", error);\n    }\n  }\n  async loadPurchasedTimes(_songID) {\n    console.log(\"Into Purchased Times\");\n    console.log(_songID);\n    let song_id = 0;\n    song_id = parseInt(_songID);\n    console.log(typeof song_id);\n    console.log(song_id);\n    const contractInstance = await this.props.contract.deployed();\n    const purchasedNumber = await contractInstance.getSongPurchasedTimes(song_id, {\n      from: this.props.account\n    });\n    console.log(\"Got Purchased Times\");\n    return purchasedNumber;\n  }\n  async loadSongDetails() {\n    console.log(\"going into song details\");\n    const contractInstance = await this.props.contract.deployed();\n    let songInfoList = [];\n    for (let i = 0; i < this.state.songIDs.length; i++) {\n      let songDetails = await contractInstance.getSongDetails(this.state.songIDs[i], {\n        from: this.props.account\n      });\n      console.log(\"Sending songid to purchased times: \", this.state.songIDs[i]);\n      let songPurchaedNumber = await this.loadPurchasedTimes(this.state.songIDs[i]);\n      console.log('songDetails[8]', songDetails[8]);\n      songInfoList.push({\n        'name': songDetails[2],\n        'genre': songDetails[7],\n        'hash': songDetails[6],\n        'cost_personal': songDetails[3].toString(),\n        'cost_commercial': songDetails[4].toString(),\n        'artistsIDSong': songDetails[8],\n        'timesPurchased': songPurchaedNumber\n      });\n      this.state.purchased_times += parseInt(songPurchaedNumber);\n    }\n    console.log(\"Artist Songs:\", songInfoList.artistsIDSong);\n    console.log(songInfoList);\n    this.setState({\n      songs: songInfoList\n    });\n  }\n  openForm() {\n    this.setState({\n      form: true\n    });\n  }\n  closeForm() {\n    this.setState({\n      form: false\n    });\n  }\n  render() {\n    if (this.state.publisherID === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Bars\",\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMicrophone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), \" \", this.state.name, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" Publisher ID : \", this.state.publisherID, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" purchased_times : \", this.state.purchased_times, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.box,\n          children: this.state.songs.map((item, i) => /*#__PURE__*/_jsxDEV(SongCard, {\n            type: \"artist\",\n            name: item.name,\n            genre: item.genre,\n            cost: item.cost_personal\n            // likes = {item.timesPurchased}\n            ,\n            likes: '0',\n            hash: item.hash\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusSquare,\n            onClick: () => {\n              this.openForm();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddSongCard, {\n          contract: this.props.contract,\n          ipfs: this.props.ipfs,\n          account: this.props.account,\n          form: this.state.form,\n          closeForm: this.closeForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nconst styles = {\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    gap: \"5%\",\n    background: COLORS.white\n  },\n  info: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  box: {\n    height: \"50%\",\n    width: \"60%\",\n    padding: \"2%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderRadius: \"30px\",\n    border: \"3px solid\",\n    overflow: \"auto\",\n    gap: \"2%\",\n    boxShadow: \"2px 5px 2px #191919\",\n    borderColor: COLORS.black,\n    backgroundColor: COLORS.white\n  }\n};\nexport default Publisher;\n\n// import React from \"react\"\n// import {COLORS} from \"./Colors\"\n// import SongCard from \"./SongCard\"\n// import AddSongCard from \"./AddSongCard\"\n// import Loader from \"react-loader-spinner\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faMicrophone, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\n\n// class Publisher extends React.Component {\n\n//     constructor(props){\n//       super(props);\n//       this.state = {name: \"\", artistID: \"\",artistsIDSong:[], publisherID: \"\",totalEarnings: \"\",purchased_times: 0, songIDs: [], songs: [], form : false}\n//       this.openForm = this.openForm.bind(this)\n//       this.closeForm = this.closeForm.bind(this)\n//     }\n\n//     componentDidMount(){\n//         this.loadPublisherDetails().then(() =>{ console.log(\"Loaded Publisher's Details\", this.state)\n//             this.loadSongDetails().then(() =>{ console.log(\"Loaded Publisher's Songs\")})\n//         })\n//     }\n\n//     async loadPublisherDetails() {\n//         try {\n//             const contractInstance = await this.props.contract.deployed();\n//             const userType = await contractInstance.checkUserType.call({ from: this.props.account });\n//             console.log(\"User Type\",userType)\n//             const publisherDetails = await contractInstance.getPublisherDetails.call({ from: this.props.account });\n//             let songList = [];\n//             for (let i = 0; i < publisherDetails[3].length; i++) {\n//                 songList.push(publisherDetails[3][i].toString());\n//             }\n//             this.setState({\n//                 publisherID: publisherDetails[0].toString(),\n//                 name: publisherDetails[2].toString(),\n//                 songIDs: songList\n//             });\n//         } catch (error) {\n//             console.error(\"Failed to load publisher details:\", error);\n//         }\n//     }\n\n//     async loadSongDetails(){\n//         const contractInstance = await this.props.contract.deployed();\n//         let songInfoList = []\n//         for(let i = 0; i < this.state.songIDs.length; i++){\n//             let songDetails = await contractInstance.getSongDetails(this.state.songIDs[i], {from:this.props.account});\n//             console.log('State song id\\n', this.state.songIDs[i])\n\n//             songInfoList.push({\n//                 'name': songDetails[2],\n//                 'genre': songDetails[7],\n//                 'hash': songDetails[6],\n//                 'cost_personal': songDetails[3].toString(),\n//                 'cost_commercial': songDetails[4].toString(),\n//                 'artistsIDSong':songDetails[8]\n//                 // 'timesPurchased': songDetails[5].toString()\n//             });\n//             // this.state.purchased_times += parseInt(songDetails[5].toString());\n//         }\n//         console.log(\"Artist Songs:\",songInfoList.artistsIDSong)\n//         console.log(songInfoList);\n\n//         this.setState({songs:songInfoList})\n//     }\n\n//     openForm(){\n//         this.setState({form : true})\n//     }\n\n//     closeForm(){\n//         this.setState({form : false})\n//     }\n\n//     render(){\n\n//         if (this.state.publisherID === \"\"){\n//             return (\n//                 <div style = {styles.main}>\n//                     <h1>Hello</h1>\n//                   <Loader type = \"Bars\" color = {COLORS.black}/>\n//                 </div>\n//             )\n//         }\n\n//         else{\n//             return (\n//                 <div style = {styles.main}>\n//                     <div style = {styles.info}>\n//                         <h1><FontAwesomeIcon icon={faMicrophone}/> {this.state.name}  </h1>\n//                         <h3> Publisher ID : {this.state.publisherID} </h3>\n//                         <h3> purchased_times : {this.state.purchased_times} </h3>\n//                     </div>\n//                     <div style = {styles.box}>\n//                         {this.state.songs.map((item,i)=> (\n//                         <SongCard \n//                             type = {\"artist\"}\n//                             name = {item.name}\n//                             genre = {item.genre}\n//                             cost = {item.cost_personal}\n//                             // likes = {item.timesPurchased}\n//                             likes = {'0'}\n//                             hash = {item.hash}\n//                             key = {i}\n//                         />))}\n//                     </div>\n//                     <h1><FontAwesomeIcon  icon={faPlusSquare} onClick = {()=>{this.openForm()}}/></h1>\n//                     <AddSongCard contract = {this.props.contract} ipfs = {this.props.ipfs} account = {this.props.account} form = {this.state.form} closeForm = {this.closeForm}/>\n//                 </div>\n//             )\n//         }\n//     }\n// }\n\n// const styles = {\n//     main : {\n//         display:\"flex\", \n//         flexDirection:\"column\", \n//         justifyContent: \"center\", \n//         alignItems: \"center\", \n//         height:\"100vh\",\n//         gap :\"5%\",\n//         background:COLORS.white,\n//         },\n//     info : {\n//         display:\"flex\", \n//         flexDirection:\"column\", \n//         alignItems: \"center\", \n//         },\n//     box : {\n//         height :\"50%\",\n//         width :\"60%\",\n//         padding :\"2%\",\n//         display:\"flex\", \n//         flexDirection:\"column\",\n//         borderRadius:\"30px\",\n//         border: \"3px solid\",\n//         overflow: \"auto\",\n//         gap :\"2%\",\n//         boxShadow: \"2px 5px 2px #191919\",\n//         borderColor :COLORS.black,\n//         backgroundColor:COLORS.white,\n//     },\n// }\n\n// export default Publisher;","map":{"version":3,"names":["React","COLORS","SongCard","AddSongCard","Loader","FontAwesomeIcon","faMicrophone","faPlusSquare","jsxDEV","_jsxDEV","Publisher","Component","constructor","props","state","name","artistID","artistsIDSong","publisherID","totalEarnings","purchased_times","songIDs","songs","form","openForm","bind","closeForm","componentDidMount","loadPublisherDetails","then","console","log","loadSongDetails","loadPurchasedTimes","contractInstance","contract","deployed","userType","checkUserType","call","from","account","publisherDetails","getPublisherDetails","songList","i","length","push","toString","setState","error","_songID","song_id","parseInt","purchasedNumber","getSongPurchasedTimes","songInfoList","songDetails","getSongDetails","songPurchaedNumber","render","style","styles","main","children","fileName","_jsxFileName","lineNumber","columnNumber","type","color","black","info","icon","box","map","item","genre","cost","cost_personal","likes","hash","onClick","ipfs","display","flexDirection","justifyContent","alignItems","height","gap","background","white","width","padding","borderRadius","border","overflow","boxShadow","borderColor","backgroundColor"],"sources":["C:/Users/Ashwin Rajesh/Downloads/Project_v6_vdawg/App/src/Components/Publisher.js"],"sourcesContent":["import React from \"react\"\r\nimport {COLORS} from \"./Colors\"\r\nimport SongCard from \"./SongCard\"\r\nimport AddSongCard from \"./AddSongCard\"\r\nimport Loader from \"react-loader-spinner\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMicrophone, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Publisher extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {name: \"\", artistID: \"\",artistsIDSong:[], publisherID: \"\",totalEarnings: \"\",purchased_times: 0, songIDs: [], songs: [], form : false}\r\n      this.openForm = this.openForm.bind(this)\r\n      this.closeForm = this.closeForm.bind(this)\r\n    }\r\n  \r\n    componentDidMount(){\r\n        this.loadPublisherDetails().then(() =>{ console.log(\"Loaded Publisher's Details\", this.state)\r\n            this.loadSongDetails().then(() =>{ console.log(\"Loaded Publisher's Songs\")})\r\n            this.loadPurchasedTimes().then(() =>{ console.log(\"Loaded Purchased Times\")})\r\n        })\r\n    }\r\n\r\n    async loadPublisherDetails() {\r\n        try {\r\n            const contractInstance = await this.props.contract.deployed();\r\n            const userType = await contractInstance.checkUserType.call({ from: this.props.account });\r\n            console.log(\"User Type\",userType)\r\n            const publisherDetails = await contractInstance.getPublisherDetails.call({ from: this.props.account });\r\n            let songList = [];\r\n            for (let i = 0; i < publisherDetails[3].length; i++) {\r\n                songList.push(publisherDetails[3][i].toString());\r\n            }\r\n            this.setState({\r\n                publisherID: publisherDetails[0].toString(),\r\n                name: publisherDetails[2].toString(),\r\n                songIDs: songList\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Failed to load publisher details:\", error);\r\n        }\r\n    }\r\n    async loadPurchasedTimes(_songID) {\r\n        console.log(\"Into Purchased Times\")\r\n        console.log(_songID)\r\n        let song_id = 0\r\n        song_id = parseInt(_songID)\r\n        console.log(typeof song_id)\r\n        console.log(song_id)\r\n        const contractInstance = await this.props.contract.deployed();\r\n        const purchasedNumber = await contractInstance.getSongPurchasedTimes(song_id, { from: this.props.account });\r\n        console.log(\"Got Purchased Times\")\r\n        return purchasedNumber;\r\n    }\r\n    \r\n\r\n    async loadSongDetails(){\r\n        console.log(\"going into song details\")\r\n        const contractInstance = await this.props.contract.deployed();\r\n        let songInfoList = []\r\n        for(let i = 0; i < this.state.songIDs.length; i++){\r\n            let songDetails = await contractInstance.getSongDetails(this.state.songIDs[i], {from:this.props.account});\r\n            console.log(\"Sending songid to purchased times: \",this.state.songIDs[i])\r\n            let songPurchaedNumber = await this.loadPurchasedTimes(this.state.songIDs[i]); \r\n            console.log('songDetails[8]', songDetails[8])\r\n\r\n            songInfoList.push({\r\n                'name': songDetails[2],\r\n                'genre': songDetails[7],\r\n                'hash': songDetails[6],\r\n                'cost_personal': songDetails[3].toString(),\r\n                'cost_commercial': songDetails[4].toString(),\r\n                'artistsIDSong':songDetails[8],\r\n                'timesPurchased': songPurchaedNumber\r\n            });\r\n            this.state.purchased_times += parseInt(songPurchaedNumber);\r\n        }\r\n        console.log(\"Artist Songs:\",songInfoList.artistsIDSong)\r\n        console.log(songInfoList);\r\n\r\n        this.setState({songs:songInfoList})\r\n    }\r\n\r\n    openForm(){\r\n        this.setState({form : true})\r\n    }\r\n\r\n    closeForm(){\r\n        this.setState({form : false})\r\n    }\r\n\r\n    render(){\r\n        \r\n        if (this.state.publisherID === \"\"){\r\n            return (\r\n                <div style = {styles.main}>\r\n                    <h1>Hello</h1>\r\n                  <Loader type = \"Bars\" color = {COLORS.black}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else{\r\n            return (\r\n                <div style = {styles.main}>\r\n                    <div style = {styles.info}>\r\n                        <h1><FontAwesomeIcon icon={faMicrophone}/> {this.state.name}  </h1>\r\n                        <h3> Publisher ID : {this.state.publisherID} </h3>\r\n                        <h3> purchased_times : {this.state.purchased_times} </h3>\r\n                    </div>\r\n                    <div style = {styles.box}>\r\n                        {this.state.songs.map((item,i)=> (\r\n                        <SongCard \r\n                            type = {\"artist\"}\r\n                            name = {item.name}\r\n                            genre = {item.genre}\r\n                            cost = {item.cost_personal}\r\n                            // likes = {item.timesPurchased}\r\n                            likes = {'0'}\r\n                            hash = {item.hash}\r\n                            key = {i}\r\n                        />))}\r\n                    </div>\r\n                    <h1><FontAwesomeIcon  icon={faPlusSquare} onClick = {()=>{this.openForm()}}/></h1>\r\n                    <AddSongCard contract = {this.props.contract} ipfs = {this.props.ipfs} account = {this.props.account} form = {this.state.form} closeForm = {this.closeForm}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n  \r\nconst styles = {\r\n    main : {\r\n        display:\"flex\", \r\n        flexDirection:\"column\", \r\n        justifyContent: \"center\", \r\n        alignItems: \"center\", \r\n        height:\"100vh\",\r\n        gap :\"5%\",\r\n        background:COLORS.white,\r\n        },\r\n    info : {\r\n        display:\"flex\", \r\n        flexDirection:\"column\", \r\n        alignItems: \"center\", \r\n        },\r\n    box : {\r\n        height :\"50%\",\r\n        width :\"60%\",\r\n        padding :\"2%\",\r\n        display:\"flex\", \r\n        flexDirection:\"column\",\r\n        borderRadius:\"30px\",\r\n        border: \"3px solid\",\r\n        overflow: \"auto\",\r\n        gap :\"2%\",\r\n        boxShadow: \"2px 5px 2px #191919\",\r\n        borderColor :COLORS.black,\r\n        backgroundColor:COLORS.white,\r\n    },\r\n}\r\n  \r\nexport default Publisher;\r\n\r\n\r\n\r\n// import React from \"react\"\r\n// import {COLORS} from \"./Colors\"\r\n// import SongCard from \"./SongCard\"\r\n// import AddSongCard from \"./AddSongCard\"\r\n// import Loader from \"react-loader-spinner\"\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faMicrophone, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// class Publisher extends React.Component {\r\n\r\n//     constructor(props){\r\n//       super(props);\r\n//       this.state = {name: \"\", artistID: \"\",artistsIDSong:[], publisherID: \"\",totalEarnings: \"\",purchased_times: 0, songIDs: [], songs: [], form : false}\r\n//       this.openForm = this.openForm.bind(this)\r\n//       this.closeForm = this.closeForm.bind(this)\r\n//     }\r\n  \r\n//     componentDidMount(){\r\n//         this.loadPublisherDetails().then(() =>{ console.log(\"Loaded Publisher's Details\", this.state)\r\n//             this.loadSongDetails().then(() =>{ console.log(\"Loaded Publisher's Songs\")})\r\n//         })\r\n//     }\r\n\r\n//     async loadPublisherDetails() {\r\n//         try {\r\n//             const contractInstance = await this.props.contract.deployed();\r\n//             const userType = await contractInstance.checkUserType.call({ from: this.props.account });\r\n//             console.log(\"User Type\",userType)\r\n//             const publisherDetails = await contractInstance.getPublisherDetails.call({ from: this.props.account });\r\n//             let songList = [];\r\n//             for (let i = 0; i < publisherDetails[3].length; i++) {\r\n//                 songList.push(publisherDetails[3][i].toString());\r\n//             }\r\n//             this.setState({\r\n//                 publisherID: publisherDetails[0].toString(),\r\n//                 name: publisherDetails[2].toString(),\r\n//                 songIDs: songList\r\n//             });\r\n//         } catch (error) {\r\n//             console.error(\"Failed to load publisher details:\", error);\r\n//         }\r\n//     }\r\n\r\n//     async loadSongDetails(){\r\n//         const contractInstance = await this.props.contract.deployed();\r\n//         let songInfoList = []\r\n//         for(let i = 0; i < this.state.songIDs.length; i++){\r\n//             let songDetails = await contractInstance.getSongDetails(this.state.songIDs[i], {from:this.props.account});\r\n//             console.log('State song id\\n', this.state.songIDs[i])\r\n\r\n//             songInfoList.push({\r\n//                 'name': songDetails[2],\r\n//                 'genre': songDetails[7],\r\n//                 'hash': songDetails[6],\r\n//                 'cost_personal': songDetails[3].toString(),\r\n//                 'cost_commercial': songDetails[4].toString(),\r\n//                 'artistsIDSong':songDetails[8]\r\n//                 // 'timesPurchased': songDetails[5].toString()\r\n//             });\r\n//             // this.state.purchased_times += parseInt(songDetails[5].toString());\r\n//         }\r\n//         console.log(\"Artist Songs:\",songInfoList.artistsIDSong)\r\n//         console.log(songInfoList);\r\n\r\n//         this.setState({songs:songInfoList})\r\n//     }\r\n\r\n//     openForm(){\r\n//         this.setState({form : true})\r\n//     }\r\n\r\n//     closeForm(){\r\n//         this.setState({form : false})\r\n//     }\r\n\r\n//     render(){\r\n        \r\n//         if (this.state.publisherID === \"\"){\r\n//             return (\r\n//                 <div style = {styles.main}>\r\n//                     <h1>Hello</h1>\r\n//                   <Loader type = \"Bars\" color = {COLORS.black}/>\r\n//                 </div>\r\n//             )\r\n//         }\r\n\r\n//         else{\r\n//             return (\r\n//                 <div style = {styles.main}>\r\n//                     <div style = {styles.info}>\r\n//                         <h1><FontAwesomeIcon icon={faMicrophone}/> {this.state.name}  </h1>\r\n//                         <h3> Publisher ID : {this.state.publisherID} </h3>\r\n//                         <h3> purchased_times : {this.state.purchased_times} </h3>\r\n//                     </div>\r\n//                     <div style = {styles.box}>\r\n//                         {this.state.songs.map((item,i)=> (\r\n//                         <SongCard \r\n//                             type = {\"artist\"}\r\n//                             name = {item.name}\r\n//                             genre = {item.genre}\r\n//                             cost = {item.cost_personal}\r\n//                             // likes = {item.timesPurchased}\r\n//                             likes = {'0'}\r\n//                             hash = {item.hash}\r\n//                             key = {i}\r\n//                         />))}\r\n//                     </div>\r\n//                     <h1><FontAwesomeIcon  icon={faPlusSquare} onClick = {()=>{this.openForm()}}/></h1>\r\n//                     <AddSongCard contract = {this.props.contract} ipfs = {this.props.ipfs} account = {this.props.account} form = {this.state.form} closeForm = {this.closeForm}/>\r\n//                 </div>\r\n//             )\r\n//         }\r\n//     }\r\n// }\r\n  \r\n// const styles = {\r\n//     main : {\r\n//         display:\"flex\", \r\n//         flexDirection:\"column\", \r\n//         justifyContent: \"center\", \r\n//         alignItems: \"center\", \r\n//         height:\"100vh\",\r\n//         gap :\"5%\",\r\n//         background:COLORS.white,\r\n//         },\r\n//     info : {\r\n//         display:\"flex\", \r\n//         flexDirection:\"column\", \r\n//         alignItems: \"center\", \r\n//         },\r\n//     box : {\r\n//         height :\"50%\",\r\n//         width :\"60%\",\r\n//         padding :\"2%\",\r\n//         display:\"flex\", \r\n//         flexDirection:\"column\",\r\n//         borderRadius:\"30px\",\r\n//         border: \"3px solid\",\r\n//         overflow: \"auto\",\r\n//         gap :\"2%\",\r\n//         boxShadow: \"2px 5px 2px #191919\",\r\n//         borderColor :COLORS.black,\r\n//         backgroundColor:COLORS.white,\r\n//     },\r\n// }\r\n  \r\n// export default Publisher;"],"mappings":"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},"metadata":{},"sourceType":"module"}