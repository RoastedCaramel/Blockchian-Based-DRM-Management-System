{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vendrell\\\\Desktop\\\\Project_v16\\\\App\\\\src\\\\Components\\\\AddSongCard.js\";\nimport React from \"react\";\nimport { COLORS } from \"./Colors\";\nimport Popup from 'reactjs-popup';\nimport Loader from \"react-loader-spinner\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic, faFileUpload } from '@fortawesome/free-solid-svg-icons';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddSongCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.captureFile = event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const file_reader = new FileReader();\n      file_reader.readAsArrayBuffer(file);\n      file_reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer.from(file_reader.result)\n        });\n      };\n    };\n    this.onSubmitClick = async event => {\n      event.preventDefault();\n      if (this.state.buffer) {\n        this.setState({\n          loading: true\n        });\n        const formData = new FormData();\n        formData.append('file', new Blob([this.state.buffer]));\n        try {\n          const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\n          const pinataResponse = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", formData, {\n            maxBodyLength: 'Infinity',\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${JWT}`\n            }\n          });\n          const songHash = pinataResponse.data.IpfsHash;\n\n          // Interact with the smart contract\n          const contractInstance = await this.props.contract.deployed();\n          console.log(\"Artists of songs:\", this.state.artist_ids);\n          let artistIDArray = this.state.artist_ids.split(',').map(Number);\n          await contractInstance.addSong(this.state.name, this.web3.utils.toWei(this.state.cost_personal, 'milliether'), this.web3.utils.toWei(this.state.cost_commercial, 'milliether'), artistIDArray, parseInt(this.state.royalty_percent), songHash, this.state.genre, {\n            from: this.props.account\n          });\n\n          // Reset loading state and other form fields if needed...\n          this.setState({\n            loading: false\n          });\n          this.props.closeForm();\n          window.location.reload();\n          console.log(\"song added\");\n        } catch (error) {\n          console.error('Error pinning to IPFS:', error);\n          this.setState({\n            loading: false\n          });\n        }\n      }\n    };\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    this.state = {\n      name: \"\",\n      genre: \"\",\n      cost_personal: \"\",\n      cost_commercial: \"\",\n      artist_ids: [],\n      royalty_percent: '',\n      buffer: \"\",\n      loading: false,\n      artistNames: [],\n      // Array to hold artist names\n      showDropdown: false,\n      // Flag to control dropdown visibility\n      searchQuery: \"\" // To store the search query\n    }; // Add this line\n  }\n  async fetchArtistNames() {\n    console.log(\"Im commin\");\n    const contractInstance = await this.props.contract.deployed();\n    const [artistIDs, artistNames] = await contractInstance.getAllArtists();\n    const artistNamesArray = artistNames.map((name, index) => ({\n      id: artistIDs[index],\n      name\n    }));\n    this.setState({\n      artistNames: artistNamesArray\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Popup, {\n      open: this.props.form,\n      onClose: () => {\n        this.props.closeForm();\n      },\n      modal: true,\n      lockScroll: true,\n      repositionOnResize: true,\n      contentStyle: styles.contentStyle,\n      overlayStyle: styles.overlayStyle,\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.load,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Bars\",\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMusic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 50\n          }, this), \" Add Song \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: styles.textInput,\n            placeholder: \"Name\",\n            value: this.state.name,\n            required: true,\n            onChange: x => {\n              this.setState({\n                name: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: styles.textInput,\n            placeholder: \"Genre\",\n            value: this.state.genre,\n            required: true,\n            onChange: x => {\n              this.setState({\n                genre: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: styles.textInput,\n            placeholder: \"cost_personal\",\n            value: this.state.cost_personal,\n            required: true,\n            onChange: x => {\n              this.setState({\n                cost_personal: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: styles.textInput,\n            placeholder: \"cost_commercial\",\n            value: this.state.cost_commercial,\n            required: true,\n            onChange: x => {\n              this.setState({\n                cost_commercial: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            style: styles.textInput,\n            placeholder: \"royalty_percent\",\n            value: this.state.royalty_percent,\n            required: true,\n            onChange: x => {\n              this.setState({\n                royalty_percent: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: styles.textInput,\n            placeholder: \"Artist ID\",\n            value: this.state.searchQuery,\n            onChange: x => {\n              this.setState({\n                searchQuery: x.target.value\n              });\n              if (x.target.value.length > 0) {\n                this.setState({\n                  showDropdown: true\n                });\n              } else {\n                this.setState({\n                  showDropdown: false\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), this.state.showDropdown && this.state.artistNames.filter(artist => artist.name.toLowerCase().includes(this.state.searchQuery.toLowerCase())).map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.artistName,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: styles.textInput,\n            placeholder: \"Aritst ID\",\n            value: this.state.artist_ids,\n            onChange: x => {\n              this.setState({\n                artist_ids: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"upload\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFileUpload,\n              size: \"3x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 40\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            id: \"upload\",\n            required: true,\n            onChange: this.captureFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: this.onSubmitClick,\n          style: styles.button,\n          value: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst styles = {\n  load: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    background: COLORS.white\n  },\n  contentStyle: {\n    height: \"90%\",\n    width: \"40%\",\n    padding: \"1%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    borderRadius: \"15px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    borderColor: COLORS.black,\n    backgroundColor: \"#FFFFFF\"\n  },\n  overlayStyle: {\n    backgroundColor: COLORS.blurBlack\n  },\n  arrowStyle: {},\n  form: {\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    gap: \"20px\",\n    borderColor: COLORS.black,\n    backgroundColor: COLORS.white\n  },\n  textInput: {\n    width: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"3%\"\n  },\n  button: {\n    width: \"50%\",\n    marginLeft: \"25%\",\n    padding: \"3%\",\n    borderRadius: \"15px\",\n    border: \"0px\",\n    cursor: \"pointer\",\n    background: COLORS.black,\n    color: COLORS.white\n  },\n  artistName: {\n    display: \"block\",\n    padding: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#f9f9f9\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    marginBottom: \"4px\"\n  }\n};\nexport default AddSongCard;","map":{"version":3,"names":["React","COLORS","Popup","Loader","FontAwesomeIcon","faMusic","faFileUpload","Web3","axios","jsxDEV","_jsxDEV","AddSongCard","Component","constructor","props","captureFile","event","preventDefault","file","target","files","file_reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","from","result","onSubmitClick","state","loading","formData","FormData","append","Blob","JWT","pinataResponse","post","maxBodyLength","headers","songHash","data","IpfsHash","contractInstance","contract","deployed","console","log","artist_ids","artistIDArray","split","map","Number","addSong","name","web3","utils","toWei","cost_personal","cost_commercial","parseInt","royalty_percent","genre","account","closeForm","window","location","reload","error","givenProvider","artistNames","showDropdown","searchQuery","fetchArtistNames","artistIDs","getAllArtists","artistNamesArray","index","id","render","open","form","onClose","modal","lockScroll","repositionOnResize","contentStyle","styles","overlayStyle","children","style","load","type","color","black","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","icon","textInput","placeholder","value","required","onChange","x","length","filter","artist","toLowerCase","includes","artistName","htmlFor","size","display","onClick","button","height","flexDirection","justifyContent","alignItems","background","white","width","padding","borderRadius","border","overflow","borderColor","backgroundColor","blurBlack","arrowStyle","marginBottom","marginTop","gap","marginLeft","cursor"],"sources":["C:/Users/Vendrell/Desktop/Project_v16/App/src/Components/AddSongCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { COLORS } from \"./Colors\";\r\nimport Popup from 'reactjs-popup';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic, faFileUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport Web3 from 'web3';\r\nimport axios from 'axios';\r\n\r\nclass AddSongCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\r\n    this.state = {\r\n      name: \"\", genre: \"\", cost_personal: \"\", cost_commercial: \"\", artist_ids: [], royalty_percent: '', buffer: \"\", loading: false,\r\n      artistNames: [], // Array to hold artist names\r\n      showDropdown: false, // Flag to control dropdown visibility\r\n      searchQuery: \"\" // To store the search query\r\n    };// Add this line\r\n  }\r\n\r\n  async fetchArtistNames() {\r\n    console.log(\"Im commin\")\r\n    const contractInstance = await this.props.contract.deployed();\r\n    const [artistIDs, artistNames] = await contractInstance.getAllArtists();\r\n    const artistNamesArray = artistNames.map((name, index) => ({ id: artistIDs[index], name }));\r\n    this.setState({ artistNames: artistNamesArray });\r\n  }\r\n\r\n  captureFile = (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    const file_reader = new FileReader();\r\n    file_reader.readAsArrayBuffer(file);\r\n    file_reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer.from(file_reader.result) });\r\n    };\r\n  }\r\n\r\n  onSubmitClick = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.buffer) {\r\n      this.setState({ loading: true });\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', new Blob([this.state.buffer]));\r\n\r\n      try {\r\n        const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\r\n\r\n        const pinataResponse = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", formData, {\r\n          maxBodyLength: 'Infinity',\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${JWT}`,\r\n          },\r\n        });\r\n        const songHash = pinataResponse.data.IpfsHash;\r\n\r\n        // Interact with the smart contract\r\n        const contractInstance = await this.props.contract.deployed();\r\n        console.log(\"Artists of songs:\", this.state.artist_ids)\r\n        let artistIDArray = this.state.artist_ids.split(',').map(Number);\r\n        await contractInstance.addSong(\r\n          this.state.name,\r\n          this.web3.utils.toWei(this.state.cost_personal, 'milliether'),\r\n          this.web3.utils.toWei(this.state.cost_commercial, 'milliether'),\r\n          artistIDArray,\r\n          parseInt(this.state.royalty_percent),\r\n          songHash,\r\n          this.state.genre,\r\n          { from: this.props.account });\r\n\r\n        // Reset loading state and other form fields if needed...\r\n        this.setState({ loading: false });\r\n        this.props.closeForm();\r\n        window.location.reload();\r\n        console.log(\"song added\")\r\n\r\n      } catch (error) {\r\n        console.error('Error pinning to IPFS:', error);\r\n        this.setState({ loading: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Popup\r\n        open={this.props.form}\r\n        onClose={() => { this.props.closeForm() }}\r\n        modal lockScroll repositionOnResize\r\n        contentStyle={styles.contentStyle}\r\n        overlayStyle={styles.overlayStyle}>\r\n        {this.state.loading\r\n          ? <div style={styles.load}> <Loader type=\"Bars\" color={COLORS.black} /></div>\r\n          : <form>\r\n            <h2 style={{ textAlign: \"center\" }}> <FontAwesomeIcon icon={faMusic} /> Add Song </h2>\r\n            <div style={styles.form} >\r\n              {/* name */}\r\n              <input type=\"text\" style={styles.textInput}\r\n                placeholder=\"Name\"\r\n                value={this.state.name} required\r\n                onChange={(x) => { this.setState({ name: x.target.value }) }} />\r\n              {/* genere */}\r\n              <input type=\"text\" style={styles.textInput}\r\n                placeholder=\"Genre\"\r\n                value={this.state.genre} required\r\n                onChange={(x) => { this.setState({ genre: x.target.value }) }} />\r\n              {/* cost Personal */}\r\n              <input type=\"number\" style={styles.textInput}\r\n                placeholder=\"cost_personal\"\r\n                value={this.state.cost_personal} required\r\n                onChange={(x) => { this.setState({ cost_personal: x.target.value }) }} />\r\n              {/* cost commercial */}\r\n              <input type=\"number\" style={styles.textInput}\r\n                placeholder=\"cost_commercial\"\r\n                value={this.state.cost_commercial} required\r\n                onChange={(x) => { this.setState({ cost_commercial: x.target.value }) }} />\r\n              {/* royalty percent */}\r\n              <input type=\"number\" style={styles.textInput}\r\n                placeholder=\"royalty_percent\"\r\n                value={this.state.royalty_percent} required\r\n                onChange={(x) => { this.setState({ royalty_percent: x.target.value }) }} />\r\n\r\n              {/* Testing */}\r\n              <input type=\"text\" style={styles.textInput}\r\n                placeholder=\"Artist ID\"\r\n                value={this.state.searchQuery}\r\n                onChange={(x) => {\r\n                  this.setState({ searchQuery: x.target.value });\r\n                  if (x.target.value.length > 0) {\r\n                    this.setState({ showDropdown: true });\r\n                  } else {\r\n                    this.setState({ showDropdown: false });\r\n                  }\r\n                }}\r\n              />\r\n              {this.state.showDropdown && this.state.artistNames.filter(artist =>\r\n                artist.name.toLowerCase().includes(this.state.searchQuery.toLowerCase())\r\n              ).map((artist, index) => (\r\n                <div key={index} style={styles.artistName}>\r\n                  <label>{artist.name}</label>\r\n                </div>\r\n              ))}\r\n              {/* Testing over */}\r\n\r\n              {/* artist ids */}\r\n              <input type=\"text\" style={styles.textInput}\r\n                placeholder=\"Aritst ID\"\r\n                value={this.state.artist_ids}\r\n                onChange={(x) => { this.setState({ artist_ids: x.target.value }) }} />\r\n              {/* <input type=\"text\" style={styles.textInput} // Assuming the input type is text, not number\r\n                placeholder=\"Artist IDs\"\r\n                value={this.state.artist_ids} // Join array to display comma-separated string\r\n                onChange={(e) => {\r\n                  const ids = e.target.value.split(',').map(id => parseInt(id.trim(), 10));\r\n                  this.setState({ artist_ids: ids });\r\n                }}\r\n                required /> */}\r\n\r\n              <label htmlFor=\"upload\"> <FontAwesomeIcon icon={faFileUpload} size=\"3x\" /> </label>\r\n              <input type=\"file\" style={{ display: 'none' }} id=\"upload\" required\r\n                onChange={this.captureFile}>\r\n              </input>\r\n            </div>\r\n            <input type=\"submit\" onClick={this.onSubmitClick} style={styles.button} value=\"Publish\" />\r\n          </form>\r\n        }\r\n      </Popup>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  load: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    background: COLORS.white\r\n  },\r\n  contentStyle: {\r\n    height: \"90%\",\r\n    width: \"40%\",\r\n    padding: \"1%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"15px\",\r\n    border: \"2px solid\",\r\n    overflow: \"auto\",\r\n    borderColor: COLORS.black,\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  overlayStyle: {\r\n    backgroundColor: COLORS.blurBlack\r\n  },\r\n  arrowStyle: {\r\n  },\r\n  form: {\r\n    marginBottom: \"5%\",\r\n    marginTop: \"5%\",\r\n    padding: \"5%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n    border: \"2px solid\",\r\n    overflow: \"auto\",\r\n    gap: \"20px\",\r\n    borderColor: COLORS.black,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    borderRadius: \"15px\",\r\n    padding: \"3%\",\r\n  },\r\n  button: {\r\n    width: \"50%\",\r\n    marginLeft: \"25%\",\r\n    padding: \"3%\",\r\n    borderRadius: \"15px\",\r\n    border: \"0px\",\r\n    cursor: \"pointer\",\r\n    background: COLORS.black,\r\n    color: COLORS.white,\r\n  },\r\n  artistName: {\r\n    display: \"block\",\r\n    padding: \"5px\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"#f9f9f9\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n}\r\n\r\nexport default AddSongCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}