{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwin Rajesh\\\\Downloads\\\\Project_v6_vdawg\\\\App\\\\src\\\\Components\\\\Login.js\";\nimport React from \"react\";\nimport Artist from \"./Artist\";\nimport Audience from \"./Audience\";\nimport Publisher from \"./Publisher\";\nimport Personal from \"./Personal\";\nimport { COLORS } from \"./Colors\";\nimport Logo from \"../Assets/logo.png\";\nimport contractMeta from \"../Build/MusicMarketplace.json\";\nimport { ethers } from 'ethers'; // Import ethers library instead of Web3\nimport contract from 'truffle-contract';\nimport { create } from 'ipfs-http-client';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport SwitchSelector from \"react-switch-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loginUser = async () => {\n      let val = \"0\";\n      try {\n        const result = await this.contract.checkUserType({\n          from: this.state.account\n        });\n        val = result.toString();\n      } catch (error) {\n        console.error('Error fetching user type:', error);\n      }\n      this.setState({\n        type: val\n      });\n    };\n    this.registerUser = async () => {\n      switch (this.state.choice) {\n        case \"1\":\n          // Personal\n          await this.contract.addPersonal(this.state.username, {\n            from: this.state.account\n          });\n          break;\n        case \"2\":\n          // Publisher\n          await this.contract.addPublisher(this.state.username, {\n            from: this.state.account\n          });\n          break;\n        case \"3\":\n          // Artist\n          await this.contract.addArtist(this.state.username, {\n            from: this.state.account\n          });\n          break;\n        case \"4\":\n          // Commercial\n          await this.contract.addCommercial(this.state.username, {\n            from: this.state.account\n          });\n          break;\n        default:\n          console.error(\"Invalid choice for user type\");\n      }\n      this.loginUser();\n    };\n    this.provider = new ethers.providers.JsonRpcProvider(\"http://localhost:7545\");\n    this.contract = contract(contractMeta);\n    this.contract = new ethers.Contract(contractMeta.networks[\"5777\"].address, this.contract.abi, this.provider.getSigner());\n    this.state = {\n      account: \"\",\n      ipfs: \"\",\n      username: \"\",\n      type: \"\",\n      choice: \"1\"\n    };\n  }\n  componentDidMount() {\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"));\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"));\n    this.loginUser().then(() => console.log(\"Login Successful\"));\n  }\n  async loadBlockchain() {\n    const accounts = await this.provider.listAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n  }\n  async loadIPFS() {\n    try {\n      // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\n      const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g'; // Replace with your Pinata JWT token\n\n      // Fetch Pinata IPFS gateway URL\n      const response = await axios.get('https://api.pinata.cloud/data/pinList', {\n        headers: {\n          'Authorization': `Bearer ${JWT}`\n        }\n      });\n      const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\n\n      // Create IPFS client using Pinata gateway\n      const conn = create({\n        host: ipfsGatewayUrl,\n        port: '5001',\n        protocol: 'https'\n      });\n      this.setState({\n        ipfs: conn\n      });\n    } catch (error) {\n      console.error('Error loading IPFS:', error);\n    }\n  }\n  // import React from \"react\"\n  // import Artist from \"./Artist\"\n  // import Audience from \"./Audience\"\n  // import Publisher from \"./Publisher\"\n  // import Personal from \"./Personal\"\n  // import { COLORS } from \"./Colors\"\n  // import Logo from \"../Assets/logo.png\"\n  // import contractMeta from \"../Build/MusicMarketplace.json\"\n\n  // import Web3 from 'web3'\n  // import contract from 'truffle-contract'\n  // import { create } from 'ipfs-http-client';\n  // import axios from 'axios';\n  // import Loader from \"react-loader-spinner\"\n  // import SwitchSelector from \"react-switch-selector\"\n  // class Login extends React.Component {\n\n  //   constructor(props) {\n  //     super(props)\n  //     this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\n  //     this.contract = contract(contractMeta)\n  //     this.contract.setProvider(this.web3.currentProvider)\n  //     this.state = { account: \"\", ipfs: \"\", username: \"\", type: \"\", choice: \"1\", }\n  //   }\n\n  //   componentDidMount() {\n  //     this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"))\n  //     this.loadIPFS().then(() => console.log(\"Loaded IPFS\"))\n  //     this.loginUser().then(() => console.log(\"Login Successful\"))\n  //   }\n\n  //   async loadBlockchain() {\n  //     const accounts = await this.web3.eth.getAccounts()\n  //     this.setState({ account: accounts[0] })\n  //   }\n\n  //   async loadIPFS() {\n  //     try {\n  //       // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\n  //       const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\n\n  //       // Fetch Pinata IPFS gateway URL\n  //       const response = await axios.get('https://api.pinata.cloud/data/pinList', {\n  //         headers: {\n  //           'Authorization': `Bearer ${JWT}`\n  //         }\n  //       });\n\n  //       const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\n\n  //       // Create IPFS client using Pinata gateway\n  //       const conn = create({ host: ipfsGatewayUrl, port: '5001', protocol: 'https' });\n\n  //       this.setState({ ipfs: conn });\n  //     } catch (error) {\n  //       console.error('Error loading IPFS:', error);\n  //     }\n  //   }\n\n  //   loginUser = async () => {\n  //     let val = \"0\"\n  //     const contractInstance = await this.contract.deployed()\n  //     await contractInstance.checkUserType({from:this.state.account}).then((x)=>{ val = x.toString()})\n  //     this.setState({type: val})\n  // }\n  // // Unknown,\n  // // Personal,\n  // // Publisher,\n  // // Artist,\n  // // Commercial\n  //   registerUser = async () => {\n  //     const contractInstance = await this.contract.deployed();\n  //     switch (this.state.choice) {\n  //        case \"1\": // Personal\n  //          await contractInstance.addPersonal(this.state.username, { from: this.state.account }).then(() => this.loginUser());\n  //          break;\n  //        case \"2\": // Publisher\n  //          await contractInstance.addPublisher(this.state.username, { from: this.state.account }).then(() => this.loginUser());\n  //          break;\n  //        case \"3\": // Artist\n  //          await contractInstance.addArtist(this.state.username, { from: this.state.account }).then(() => this.loginUser());\n  //          break;\n  //        case \"4\": // Commercial\n  //          await contractInstance.addCommercial(this.state.username, { from: this.state.account }).then(() => this.loginUser());\n  //          break;\n  //        default:\n  //          console.error(\"Invalid choice for user type\");\n  //     }\n  //    }\n\n  render() {\n    // Unknown,\n    // Personal,\n    // Publisher,\n    // Artist,\n    // Commercial\n    if (this.state.type === \"0\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: styles.img,\n          alt: \"logo\",\n          src: Logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.switch,\n          children: /*#__PURE__*/_jsxDEV(SwitchSelector, {\n            onChange: val => {\n              this.setState({\n                choice: val\n              });\n            },\n            options: [{\n              label: \"Personal\",\n              value: \"1\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Publisher\",\n              value: \"2\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Artist\",\n              value: \"3\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Commercial\",\n              value: \"4\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }],\n            wrapperBorderRadius: 50,\n            optionBorderRadius: 50,\n            fontSize: \"20\",\n            fontColor: COLORS.white,\n            backgroundColor: COLORS.black\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.username,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            style: styles.textInput,\n            value: this.state.username,\n            required: true,\n            onChange: x => {\n              this.setState({\n                username: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: this.registerUser,\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.type === \"1\") {\n      return /*#__PURE__*/_jsxDEV(Personal, {\n        account: this.state.account,\n        contract: this.contract,\n        ipfs: this.state.ipfs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n      // <h1>Personal</h1>\n      ;\n    } else if (this.state.type === \"2\") {\n      return /*#__PURE__*/_jsxDEV(Publisher, {\n        account: this.state.account,\n        contract: this.contract,\n        ipfs: this.state.ipfs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n      // <h1>Publisher</h1>\n      ;\n    } else if (this.state.type === \"3\") {\n      return (\n        /*#__PURE__*/\n        // <Audience\n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        _jsxDEV(Artist, {\n          account: this.state.account,\n          contract: this.contract,\n          ipfs: this.state.ipfs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }, this)\n        // <h1>Artist</h1>\n      );\n    } else if (this.state.type === \"4\") {\n      return (\n        /*#__PURE__*/\n        // <Audience\n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        _jsxDEV(\"h1\", {\n          children: \"Commercial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }, this)\n      );\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Bars\",\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nconst styles = {\n  main: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    background: COLORS.white\n  },\n  button: {\n    height: \"7.5%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    borderRadius: \"50px\",\n    boxShadow: \"2px 5px 2px #999\",\n    color: COLORS.white,\n    background: COLORS.black\n  },\n  img: {\n    width: \"32.5%\",\n    borderRadius: \"100px\",\n    boxShadow: \"2px 5px 2px #999\"\n  },\n  switch: {\n    height: \"7.5%\",\n    width: \"50%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\"\n  },\n  form: {\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    gap: \"20px\",\n    borderColor: COLORS.black,\n    backgroundColor: COLORS.brown\n  },\n  username: {\n    height: \"6%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\"\n  },\n  textInput: {\n    height: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"3%\",\n    textAlign: \"center\"\n  }\n};\nexport default Login;","map":{"version":3,"names":["React","Artist","Audience","Publisher","Personal","COLORS","Logo","contractMeta","ethers","contract","create","axios","Loader","SwitchSelector","jsxDEV","_jsxDEV","Login","Component","constructor","props","loginUser","val","result","checkUserType","from","state","account","toString","error","console","setState","type","registerUser","choice","addPersonal","username","addPublisher","addArtist","addCommercial","provider","providers","JsonRpcProvider","Contract","networks","address","abi","getSigner","ipfs","componentDidMount","loadBlockchain","then","log","loadIPFS","accounts","listAccounts","JWT","response","get","headers","ipfsGatewayUrl","data","rows","ipfs_pin_hash","conn","host","port","protocol","render","style","styles","main","children","img","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","switch","onChange","options","label","value","selectedBackgroundColor","wrapperBorderRadius","optionBorderRadius","fontSize","fontColor","white","backgroundColor","black","placeholder","textInput","required","x","target","button","onClick","color","height","display","flexDirection","justifyContent","alignItems","background","width","fontWeight","cursor","borderRadius","boxShadow","form","marginBottom","marginTop","padding","border","overflow","gap","borderColor","brown","textAlign"],"sources":["C:/Users/Ashwin Rajesh/Downloads/Project_v6_vdawg/App/src/Components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport Artist from \"./Artist\";\r\nimport Audience from \"./Audience\";\r\nimport Publisher from \"./Publisher\";\r\nimport Personal from \"./Personal\";\r\nimport { COLORS } from \"./Colors\";\r\nimport Logo from \"../Assets/logo.png\";\r\nimport contractMeta from \"../Build/MusicMarketplace.json\";\r\n\r\nimport { ethers } from 'ethers';  // Import ethers library instead of Web3\r\nimport contract from 'truffle-contract';\r\nimport { create } from 'ipfs-http-client';\r\nimport axios from 'axios';\r\nimport Loader from \"react-loader-spinner\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.provider = new ethers.providers.JsonRpcProvider(\"http://localhost:7545\");\r\n    this.contract = contract(contractMeta);\r\n    this.contract = new ethers.Contract(contractMeta.networks[\"5777\"].address, this.contract.abi, this.provider.getSigner());\r\n    this.state = { account: \"\", ipfs: \"\", username: \"\", type: \"\", choice: \"1\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"));\r\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"));\r\n    this.loginUser().then(() => console.log(\"Login Successful\"));\r\n  }\r\n\r\n  async loadBlockchain() {\r\n    const accounts = await this.provider.listAccounts();\r\n    this.setState({ account: accounts[0] });\r\n  }\r\n\r\n  async loadIPFS() {\r\n    try {\r\n      // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\r\n      const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';  // Replace with your Pinata JWT token\r\n\r\n      // Fetch Pinata IPFS gateway URL\r\n      const response = await axios.get('https://api.pinata.cloud/data/pinList', {\r\n        headers: {\r\n          'Authorization': `Bearer ${JWT}`\r\n        }\r\n      });\r\n\r\n      const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\r\n\r\n      // Create IPFS client using Pinata gateway\r\n      const conn = create({ host: ipfsGatewayUrl, port: '5001', protocol: 'https' });\r\n\r\n      this.setState({ ipfs: conn });\r\n    } catch (error) {\r\n      console.error('Error loading IPFS:', error);\r\n    }\r\n  }\r\n\r\n  loginUser = async () => {\r\n    let val = \"0\";\r\n    try {\r\n      const result = await this.contract.checkUserType({ from: this.state.account });\r\n      val = result.toString();\r\n    } catch (error) {\r\n      console.error('Error fetching user type:', error);\r\n    }\r\n    this.setState({ type: val });\r\n  }\r\n\r\n  registerUser = async () => {\r\n    switch (this.state.choice) {\r\n      case \"1\": // Personal\r\n        await this.contract.addPersonal(this.state.username, { from: this.state.account });\r\n        break;\r\n      case \"2\": // Publisher\r\n        await this.contract.addPublisher(this.state.username, { from: this.state.account });\r\n        break;\r\n      case \"3\": // Artist\r\n        await this.contract.addArtist(this.state.username, { from: this.state.account });\r\n        break;\r\n      case \"4\": // Commercial\r\n        await this.contract.addCommercial(this.state.username, { from: this.state.account });\r\n        break;\r\n      default:\r\n        console.error(\"Invalid choice for user type\");\r\n    }\r\n    this.loginUser();\r\n  }\r\n\r\n\r\n// import React from \"react\"\r\n// import Artist from \"./Artist\"\r\n// import Audience from \"./Audience\"\r\n// import Publisher from \"./Publisher\"\r\n// import Personal from \"./Personal\"\r\n// import { COLORS } from \"./Colors\"\r\n// import Logo from \"../Assets/logo.png\"\r\n// import contractMeta from \"../Build/MusicMarketplace.json\"\r\n\r\n// import Web3 from 'web3'\r\n// import contract from 'truffle-contract'\r\n// import { create } from 'ipfs-http-client';\r\n// import axios from 'axios';\r\n// import Loader from \"react-loader-spinner\"\r\n// import SwitchSelector from \"react-switch-selector\"\r\n// class Login extends React.Component {\r\n\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n//     this.contract = contract(contractMeta)\r\n//     this.contract.setProvider(this.web3.currentProvider)\r\n//     this.state = { account: \"\", ipfs: \"\", username: \"\", type: \"\", choice: \"1\", }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"))\r\n//     this.loadIPFS().then(() => console.log(\"Loaded IPFS\"))\r\n//     this.loginUser().then(() => console.log(\"Login Successful\"))\r\n//   }\r\n\r\n//   async loadBlockchain() {\r\n//     const accounts = await this.web3.eth.getAccounts()\r\n//     this.setState({ account: accounts[0] })\r\n//   }\r\n\r\n//   async loadIPFS() {\r\n//     try {\r\n//       // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\r\n//       const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\r\n\r\n//       // Fetch Pinata IPFS gateway URL\r\n//       const response = await axios.get('https://api.pinata.cloud/data/pinList', {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${JWT}`\r\n//         }\r\n//       });\r\n\r\n//       const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\r\n\r\n//       // Create IPFS client using Pinata gateway\r\n//       const conn = create({ host: ipfsGatewayUrl, port: '5001', protocol: 'https' });\r\n\r\n//       this.setState({ ipfs: conn });\r\n//     } catch (error) {\r\n//       console.error('Error loading IPFS:', error);\r\n//     }\r\n//   }\r\n\r\n//   loginUser = async () => {\r\n//     let val = \"0\"\r\n//     const contractInstance = await this.contract.deployed()\r\n//     await contractInstance.checkUserType({from:this.state.account}).then((x)=>{ val = x.toString()})\r\n//     this.setState({type: val})\r\n// }\r\n// // Unknown,\r\n// // Personal,\r\n// // Publisher,\r\n// // Artist,\r\n// // Commercial\r\n//   registerUser = async () => {\r\n//     const contractInstance = await this.contract.deployed();\r\n//     switch (this.state.choice) {\r\n//        case \"1\": // Personal\r\n//          await contractInstance.addPersonal(this.state.username, { from: this.state.account }).then(() => this.loginUser());\r\n//          break;\r\n//        case \"2\": // Publisher\r\n//          await contractInstance.addPublisher(this.state.username, { from: this.state.account }).then(() => this.loginUser());\r\n//          break;\r\n//        case \"3\": // Artist\r\n//          await contractInstance.addArtist(this.state.username, { from: this.state.account }).then(() => this.loginUser());\r\n//          break;\r\n//        case \"4\": // Commercial\r\n//          await contractInstance.addCommercial(this.state.username, { from: this.state.account }).then(() => this.loginUser());\r\n//          break;\r\n//        default:\r\n//          console.error(\"Invalid choice for user type\");\r\n//     }\r\n//    }\r\n\r\n  render() {\r\n// Unknown,\r\n// Personal,\r\n// Publisher,\r\n// Artist,\r\n// Commercial\r\n    if (this.state.type === \"0\") {\r\n      return (\r\n        <div style={styles.main}>\r\n          <img style={styles.img} alt=\"logo\" src={Logo} />\r\n          <div style={styles.switch}>\r\n            <SwitchSelector\r\n              onChange={(val) => { this.setState({ choice: val }) }}\r\n              options={[\r\n                { label: \"Personal\", value: \"1\", selectedBackgroundColor: \"#26ae5f\", },\r\n                { label: \"Publisher\", value: \"2\", selectedBackgroundColor: \"#26ae5f\" },\r\n                { label: \"Artist\", value: \"3\", selectedBackgroundColor: \"#26ae5f\" },\r\n                { label: \"Commercial\", value: \"4\", selectedBackgroundColor: \"#26ae5f\" },\r\n              ]}\r\n              wrapperBorderRadius={50}\r\n              optionBorderRadius={50}\r\n              fontSize={\"20\"}\r\n              fontColor={COLORS.white}\r\n              backgroundColor={COLORS.black} />\r\n          </div>\r\n          <div style={styles.username}>\r\n            <input type=\"text\" placeholder=\"Username\" style={styles.textInput}\r\n              value={this.state.username} required\r\n              onChange={(x) => { this.setState({ username: x.target.value }) }} />\r\n          </div>\r\n          <button style={styles.button} onClick={this.registerUser}> Register </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.type === \"1\") {\r\n      return (\r\n        <Personal\r\n          account = {this.state.account}\r\n          contract = {this.contract}\r\n          ipfs = {this.state.ipfs}\r\n        />\r\n        // <h1>Personal</h1>\r\n      )\r\n    }\r\n\r\n    else if (this.state.type === \"2\") {\r\n      return (\r\n        <Publisher\r\n          account={this.state.account}\r\n          contract={this.contract}\r\n          ipfs={this.state.ipfs}\r\n        />\r\n        // <h1>Publisher</h1>\r\n      )\r\n    }\r\n    else if (this.state.type === \"3\") {\r\n      return (\r\n        // <Audience\r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        <Artist\r\n          account={this.state.account}\r\n          contract={this.contract}\r\n          ipfs={this.state.ipfs}\r\n        />\r\n        // <h1>Artist</h1>\r\n      )\r\n    }\r\n    else if (this.state.type === \"4\") {\r\n      return (\r\n        // <Audience\r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        <h1>Commercial</h1>\r\n      )\r\n    }\r\n\r\n    else {\r\n      return (\r\n        <div style={styles.main}>\r\n          <Loader type=\"Bars\" color={COLORS.black} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  main: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    background: COLORS.white\r\n  },\r\n  button: {\r\n    height: \"7.5%\",\r\n    width: \"15%\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50px\",\r\n    boxShadow: \"2px 5px 2px #999\",\r\n    color: COLORS.white,\r\n    background: COLORS.black,\r\n  },\r\n  img: {\r\n    width: \"32.5%\",\r\n    borderRadius: \"100px\",\r\n    boxShadow: \"2px 5px 2px #999\",\r\n  },\r\n  switch: {\r\n    height: \"7.5%\",\r\n    width: \"50%\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n  form: {\r\n    marginBottom: \"5%\",\r\n    marginTop: \"5%\",\r\n    padding: \"5%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n    border: \"2px solid\",\r\n    overflow: \"auto\",\r\n    gap: \"20px\",\r\n    borderColor: COLORS.black,\r\n    backgroundColor: COLORS.brown,\r\n  },\r\n  username: {\r\n    height: \"6%\",\r\n    width: \"15%\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  textInput: {\r\n    height: \"100%\",\r\n    borderRadius: \"15px\",\r\n    padding: \"3%\",\r\n    textAlign: \"center\",\r\n  },\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}