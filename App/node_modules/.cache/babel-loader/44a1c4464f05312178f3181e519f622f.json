{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vendrell\\\\Desktop\\\\MajorProject_v3\\\\App\\\\src\\\\Components\\\\Login.js\";\nimport React from \"react\";\nimport Artist from \"./Artist\";\nimport Audience from \"./Audience\";\nimport Publisher from \"./Publisher\";\nimport { COLORS } from \"./Colors\";\nimport Logo from \"../Assets/logo.png\";\nimport contractMeta from \"../Build/MusicMarketplace.json\";\nimport Web3 from 'web3';\nimport contract from 'truffle-contract';\nimport { create } from 'ipfs-http-client';\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport SwitchSelector from \"react-switch-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loginUser = async () => {\n      if (!this.state.account) {\n        console.error(\"Ethereum address is not defined.\");\n        return;\n      }\n      let val = \"0\";\n      const contractInstance = await this.contract.deployed();\n      await contractInstance.checkUserType({\n        from: this.state.account\n      }).then(x => {\n        val = x.toString();\n      });\n      this.setState({\n        type: val\n      });\n    };\n    // Unknown,\n    // Personal,\n    // Publisher,\n    // Artist,\n    // Commercial\n    this.registerUser = async () => {\n      const contractInstance = await this.contract.deployed();\n      if (this.state.choice === \"1\") await contractInstance.addPersonal(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n      if (this.state.choice === \"2\") await contractInstance.addCommercial(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n      if (this.state.choice === \"3\") await contractInstance.addPublisher(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n      if (this.state.choice === \"4\") await contractInstance.addArtist(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n    };\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    this.contract = contract(contractMeta);\n    this.contract.setProvider(this.web3.currentProvider);\n    this.state = {\n      account: \"\",\n      ipfs: \"\",\n      username: \"\",\n      type: \"\",\n      choice: \"1\"\n    };\n  }\n  componentDidMount() {\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"));\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"));\n    this.loginUser().then(() => console.log(\"Login Successful\"));\n  }\n  async loadBlockchain() {\n    const accounts = await this.web3.eth.getAccounts();\n    console.log(\"Ethereum accounts:\", accounts);\n    this.setState({\n      account: accounts[0] || \"\"\n    });\n  }\n  async loadIPFS() {\n    try {\n      // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\n      const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\n\n      // Fetch Pinata IPFS gateway URL\n      const response = await axios.get('https://api.pinata.cloud/data/pinList', {\n        headers: {\n          'Authorization': `Bearer ${JWT}`\n        }\n      });\n      const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\n\n      // Create IPFS client using Pinata gateway\n      const conn = create({\n        host: ipfsGatewayUrl,\n        port: '5001',\n        protocol: 'https'\n      });\n      this.setState({\n        ipfs: conn\n      });\n    } catch (error) {\n      console.error('Error loading IPFS:', error);\n    }\n  }\n  render() {\n    if (this.state.type === \"0\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: styles.img,\n          alt: \"logo\",\n          src: Logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.switch,\n          children: /*#__PURE__*/_jsxDEV(SwitchSelector, {\n            onChange: val => {\n              this.setState({\n                choice: val\n              });\n            },\n            options: [{\n              label: \"Personal\",\n              value: \"1\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Commercial\",\n              value: \"2\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Publisher\",\n              value: \"3\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Artist\",\n              value: \"4\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }],\n            wrapperBorderRadius: 50,\n            optionBorderRadius: 50,\n            fontSize: \"20\",\n            fontColor: COLORS.white,\n            backgroundColor: COLORS.black\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.username,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            style: styles.textInput,\n            value: this.state.username,\n            required: true,\n            onChange: x => {\n              this.setState({\n                username: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: this.registerUser,\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.type === \"1\") {\n      return (\n        /*#__PURE__*/\n        // <Artist \n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        _jsxDEV(\"h1\", {\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)\n      );\n    } else if (this.state.type === \"2\") {\n      return (\n        /*#__PURE__*/\n        // <Audience\n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        _jsxDEV(\"h1\", {\n          children: \"Commercial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)\n      );\n    } else if (this.state.type === \"3\") {\n      return (\n        /*#__PURE__*/\n        // <Audience\n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        // <Publisher\n        //   account={this.state.account}\n        //   contract={this.contract}\n        //   ipfs={this.state.ipfs}\n        // />\n        _jsxDEV(\"h1\", {\n          children: \"HEllo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)\n      );\n    } else if (this.state.type === \"4\") {\n      return (\n        /*#__PURE__*/\n        // <Audience\n        //   account = {this.state.account}\n        //   contract = {this.contract}\n        //   ipfs = {this.state.ipfs}\n        // />\n        _jsxDEV(\"h1\", {\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)\n      );\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Bars\",\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nconst styles = {\n  main: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    background: COLORS.brown\n  },\n  button: {\n    height: \"7.5%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    borderRadius: \"50px\",\n    boxShadow: \"2px 5px 2px #999\",\n    color: COLORS.white,\n    background: COLORS.black\n  },\n  img: {\n    width: \"32.5%\",\n    borderRadius: \"100px\",\n    boxShadow: \"2px 5px 2px #999\"\n  },\n  switch: {\n    height: \"7.5%\",\n    width: \"50%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\"\n  },\n  form: {\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    gap: \"20px\",\n    borderColor: COLORS.black,\n    backgroundColor: COLORS.brown\n  },\n  username: {\n    height: \"6%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\"\n  },\n  textInput: {\n    height: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"3%\",\n    textAlign: \"center\"\n  }\n};\nexport default Login;","map":{"version":3,"names":["React","Artist","Audience","Publisher","COLORS","Logo","contractMeta","Web3","contract","create","axios","Loader","SwitchSelector","jsxDEV","_jsxDEV","Login","Component","constructor","props","loginUser","state","account","console","error","val","contractInstance","deployed","checkUserType","from","then","x","toString","setState","type","registerUser","choice","addPersonal","username","addCommercial","addPublisher","addArtist","web3","givenProvider","setProvider","currentProvider","ipfs","componentDidMount","loadBlockchain","log","loadIPFS","accounts","eth","getAccounts","JWT","response","get","headers","ipfsGatewayUrl","data","rows","ipfs_pin_hash","conn","host","port","protocol","render","style","styles","main","children","img","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","switch","onChange","options","label","value","selectedBackgroundColor","wrapperBorderRadius","optionBorderRadius","fontSize","fontColor","white","backgroundColor","black","placeholder","textInput","required","target","button","onClick","color","height","display","flexDirection","justifyContent","alignItems","background","brown","width","fontWeight","cursor","borderRadius","boxShadow","form","marginBottom","marginTop","padding","border","overflow","gap","borderColor","textAlign"],"sources":["C:/Users/Vendrell/Desktop/MajorProject_v3/App/src/Components/Login.js"],"sourcesContent":["import React from \"react\"\r\nimport Artist from \"./Artist\"\r\nimport Audience from \"./Audience\"\r\nimport Publisher from \"./Publisher\"\r\nimport { COLORS } from \"./Colors\"\r\nimport Logo from \"../Assets/logo.png\"\r\nimport contractMeta from \"../Build/MusicMarketplace.json\"\r\n\r\nimport Web3 from 'web3'\r\nimport contract from 'truffle-contract'\r\nimport { create } from 'ipfs-http-client';\r\nimport axios from 'axios';\r\nimport Loader from \"react-loader-spinner\"\r\nimport SwitchSelector from \"react-switch-selector\"\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\r\n    this.contract = contract(contractMeta)\r\n    this.contract.setProvider(this.web3.currentProvider)\r\n    this.state = { account: \"\", ipfs: \"\", username: \"\", type: \"\", choice: \"1\", }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"))\r\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"))\r\n    this.loginUser().then(() => console.log(\"Login Successful\"))\r\n  }\r\n\r\n  async loadBlockchain() {\r\n    const accounts = await this.web3.eth.getAccounts();\r\n    console.log(\"Ethereum accounts:\", accounts);\r\n    this.setState({ account: accounts[0] || \"\" });\r\n}\r\n\r\n  async loadIPFS() {\r\n    try {\r\n      // Retrieve Pinata JWT token from a secure source (environment variable, etc.)\r\n      const JWT = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJlMjg5NDM1Mi0wMGQ3LTRlMWMtYTAxYy1kNjMyOGQwOWU1MzMiLCJlbWFpbCI6Imt5bGVrY3Jhc3RvQHN0dWRlbnQuc2ZpdC5hYy5pbiIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiJiZjM0MDJiNmY5NmM4MDQ5MDFiNiIsInNjb3BlZEtleVNlY3JldCI6ImQ0ODM5MTE4NjRkZGNmMzU3N2NmNmNmZTEyNmEyYjZjODcxNGVmY2UwNjgzNDViNmMwYzMzYTc2NDFhY2RlYWQiLCJpYXQiOjE3MDg5MzY3OTd9.oqfWb_f78GtF7VXqrrmNfbYP8UFzx6oVGvutjFLRh_g';\r\n\r\n      // Fetch Pinata IPFS gateway URL\r\n      const response = await axios.get('https://api.pinata.cloud/data/pinList', {\r\n        headers: {\r\n          'Authorization': `Bearer ${JWT}`\r\n        }\r\n      });\r\n\r\n      const ipfsGatewayUrl = response.data.rows[0].ipfs_pin_hash;\r\n\r\n      // Create IPFS client using Pinata gateway\r\n      const conn = create({ host: ipfsGatewayUrl, port: '5001', protocol: 'https' });\r\n\r\n      this.setState({ ipfs: conn });\r\n    } catch (error) {\r\n      console.error('Error loading IPFS:', error);\r\n    }\r\n  }\r\n\r\n  loginUser = async () => {\r\n    if (!this.state.account) {\r\n      console.error(\"Ethereum address is not defined.\");\r\n      return;\r\n    }\r\n  \r\n    let val = \"0\";\r\n    const contractInstance = await this.contract.deployed();\r\n    await contractInstance.checkUserType({from: this.state.account}).then((x) => {\r\n      val = x.toString();\r\n    });\r\n    this.setState({type: val});\r\n  }\r\n  // Unknown,\r\n  // Personal,\r\n  // Publisher,\r\n  // Artist,\r\n  // Commercial\r\n  registerUser = async () => {\r\n    const contractInstance = await this.contract.deployed()\r\n    if (this.state.choice === \"1\")\r\n      await contractInstance.addPersonal(this.state.username, { from: this.state.account }).then(() => this.loginUser())\r\n    if (this.state.choice === \"2\")\r\n      await contractInstance.addCommercial(this.state.username, { from: this.state.account }).then(() => this.loginUser())\r\n    if (this.state.choice === \"3\")\r\n      await contractInstance.addPublisher(this.state.username, { from: this.state.account }).then(() => this.loginUser())\r\n    if (this.state.choice === \"4\")\r\n      await contractInstance.addArtist(this.state.username, { from: this.state.account }).then(() => this.loginUser())\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.type === \"0\") {\r\n      return (\r\n        <div style={styles.main}>\r\n          <img style={styles.img} alt=\"logo\" src={Logo} />\r\n          <div style={styles.switch}>\r\n            <SwitchSelector\r\n              onChange={(val) => { this.setState({ choice: val }) }}\r\n              options={[\r\n                { label: \"Personal\", value: \"1\", selectedBackgroundColor: \"#26ae5f\", },\r\n                { label: \"Commercial\", value: \"2\", selectedBackgroundColor: \"#26ae5f\" },\r\n                { label: \"Publisher\", value: \"3\", selectedBackgroundColor: \"#26ae5f\" },\r\n                { label: \"Artist\", value: \"4\", selectedBackgroundColor: \"#26ae5f\" },\r\n              ]}\r\n              wrapperBorderRadius={50}\r\n              optionBorderRadius={50}\r\n              fontSize={\"20\"}\r\n              fontColor={COLORS.white}\r\n              backgroundColor={COLORS.black} />\r\n          </div>\r\n          <div style={styles.username}>\r\n            <input type=\"text\" placeholder=\"Username\" style={styles.textInput}\r\n              value={this.state.username} required\r\n              onChange={(x) => { this.setState({ username: x.target.value }) }} />\r\n          </div>\r\n          <button style={styles.button} onClick={this.registerUser}> Register </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.type === \"1\") {\r\n      return (\r\n        // <Artist \r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        <h1>Personal</h1>\r\n      )\r\n    }\r\n\r\n    else if (this.state.type === \"2\") {\r\n      return (\r\n        // <Audience\r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        <h1>Commercial</h1>\r\n      )\r\n    }\r\n    else if (this.state.type === \"3\") {\r\n      return (\r\n        // <Audience\r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        // <Publisher\r\n        //   account={this.state.account}\r\n        //   contract={this.contract}\r\n        //   ipfs={this.state.ipfs}\r\n        // />\r\n        <h1>HEllo</h1>\r\n      )\r\n    }\r\n    else if (this.state.type === \"4\") {\r\n      return (\r\n        // <Audience\r\n        //   account = {this.state.account}\r\n        //   contract = {this.contract}\r\n        //   ipfs = {this.state.ipfs}\r\n        // />\r\n        <h1>Artist</h1>\r\n      )\r\n    }\r\n\r\n    else {\r\n      return (\r\n        <div style={styles.main}>\r\n          <Loader type=\"Bars\" color={COLORS.black} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  main: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    background: COLORS.brown\r\n  },\r\n  button: {\r\n    height: \"7.5%\",\r\n    width: \"15%\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50px\",\r\n    boxShadow: \"2px 5px 2px #999\",\r\n    color: COLORS.white,\r\n    background: COLORS.black,\r\n  },\r\n  img: {\r\n    width: \"32.5%\",\r\n    borderRadius: \"100px\",\r\n    boxShadow: \"2px 5px 2px #999\",\r\n  },\r\n  switch: {\r\n    height: \"7.5%\",\r\n    width: \"50%\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"500\",\r\n  },\r\n  form: {\r\n    marginBottom: \"5%\",\r\n    marginTop: \"5%\",\r\n    padding: \"5%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n    border: \"2px solid\",\r\n    overflow: \"auto\",\r\n    gap: \"20px\",\r\n    borderColor: COLORS.black,\r\n    backgroundColor: COLORS.brown,\r\n  },\r\n  username: {\r\n    height: \"6%\",\r\n    width: \"15%\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  textInput: {\r\n    height: \"100%\",\r\n    borderRadius: \"15px\",\r\n    padding: \"3%\",\r\n    textAlign: \"center\",\r\n  },\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}